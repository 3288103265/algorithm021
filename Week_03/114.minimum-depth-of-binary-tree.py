# Definition for a binary tree node.# class TreeNode:#     def __init__(self, val=0, left=None, right=None):#         self.val = val#         self.left = left#         self.right = rightclass Solution:    def minDepth(self, root: TreeNode) -> int:        #recursive        # terminator        if root is None:            return 0        if root.left is None and root.right is None:            return 1                # # process. wrong!!        # left_height = self.minDepth(root.left)        # right_height = self.minDepth(root.right)        # return min(left_height, right_height)+1        min_depth = 10**9        if root.left:            min_depth = min(self.minDepth(root.left), min_depth)        if root.right:            min_depth = min(self.minDepth(root.right), min_depth)                return min_depth + 1